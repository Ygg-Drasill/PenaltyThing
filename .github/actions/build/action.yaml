name: Build and Push Docker Images

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        description: 'Environment (dev or prod)'
        required: true
        type: string
        default: 'dev'
      DOCKER_TAG:
        description: 'Docker image tag'
        type: string
        required: false
      USERNAME:
        description: 'GitHub username'
        type: string
        required: true
      REGISTRY:
        description: 'Container registry'
        type: string
        required: true
      IMAGE_NAME:
        description: 'Image name'
        type: string
        required: true
      TAGS:
        description: 'Docker image tags'
        type: string
        required: false
      LABELS:
        description: 'Docker image labels'
        type: string
        required: false
      repository:
        description: 'Repository name'
        type: string
        required: true
      token:
          description: 'GitHub token'
          type: string
          required: true

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.REGISTRY }}
          username: ${{ inputs.USERNAME }}
          password: ${{ inputs.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.REGISTRY }}/${{ inputs.IMAGE_NAME }}/backend-${{ inputs.ENVIRONMENT }}
          tags: ${{ inputs.DOCKER_TAG }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: ${{ inputs.TAGS }}
          labels: ${{ inputs.LABELS }}

  build-and-push-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.REGISTRY }}
          username: ${{ inputs.USERNAME }}
          password: ${{ inputs.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.REGISTRY }}/${{ inputs.IMAGE_NAME }}/frontend-${{ inputs.ENVIRONMENT }}
          tags: ${{ inputs.DOCKER_TAG }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ inputs.TAGS }}
          labels: ${{ inputs.LABELS }}

  build-and-push-nginx:
    runs-on: nginx-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.REGISTRY }}
          username: ${{ inputs.USERNAME }}
          password: ${{ inputs.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.REGISTRY }}/${{ inputs.IMAGE_NAME }}/nginx-${{ inputs.ENVIRONMENT }}
          tags: ${{ inputs.DOCKER_TAG }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ inputs.TAGS }}
          labels: ${{ inputs.LABELS }}