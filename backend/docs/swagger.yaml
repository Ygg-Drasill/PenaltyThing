definitions:
  AddPenaltyRequest:
    properties:
      comment:
        type: string
      issuerUserId:
        type: string
      lawId:
        type: string
      targetUserId:
        type: string
    type: object
  AuthenticateUserRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  CreateLawRequest:
    properties:
      description:
        type: string
      teamId:
        type: string
      title:
        type: string
    type: object
  CreateTeamRequest:
    properties:
      name:
        type: string
      userId:
        type: string
    type: object
  Law:
    properties:
      description:
        type: string
      id:
        type: string
      teamId:
        type: string
      title:
        type: string
    type: object
  Member:
    properties:
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      penalties:
        items:
          $ref: '#/definitions/PenaltyEntry'
        type: array
      username:
        type: string
    type: object
  PenaltyEntry:
    properties:
      comment:
        type: string
      createdAt:
        type: string
      id:
        type: string
      isNew:
        type: boolean
      issuedBy:
        type: string
      law:
        $ref: '#/definitions/Law'
      lawId:
        type: string
      userId:
        type: string
    type: object
  RegisterUserRequest:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  Team:
    properties:
      id:
        type: string
      laws:
        items:
          $ref: '#/definitions/Law'
        type: array
      members:
        items:
          $ref: '#/definitions/User'
        type: array
      name:
        type: string
    type: object
  User:
    properties:
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      password:
        type: string
      penalties:
        items:
          $ref: '#/definitions/PenaltyEntry'
        type: array
      teamId:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: tab@penaltything.social
    name: Tobias Bay
    url: http://penaltything.social/support
  title: PenaltyThing API
  version: "1.0"
paths:
  /law/create:
    post:
      consumes:
      - application/json
      description: create law
      operationId: createLaw
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateLawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Law'
      summary: Create new law
      tags:
      - law
  /law/getByTeam:
    get:
      description: get all laws in a team by teamId
      operationId: getLaws
      parameters:
      - description: Team ID
        in: query
        name: teamId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Law'
            type: array
      summary: Get laws
      tags:
      - law
  /penalty/add:
    post:
      consumes:
      - application/json
      description: Add penalty to member of team
      operationId: addPenalty
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/AddPenaltyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PenaltyEntry'
      summary: Add penalty to team member
      tags:
      - penalty
  /team/create:
    post:
      consumes:
      - application/json
      description: Create a new team
      operationId: createTeam
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateTeamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Team'
      summary: Create new team
      tags:
      - team
  /user/authenticate:
    post:
      description: Authenticate user using username and password
      operationId: authenticateUser
      parameters:
      - description: User credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/AuthenticateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Member'
      summary: Authenticate user
      tags:
      - user
  /user/get:
    get:
      description: get user
      operationId: getUser
      parameters:
      - description: User search by id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Member'
      summary: Get user
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      description: Register new user, given password will be encrypted on backend.
        This is subject to change
      operationId: registerUser
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/RegisterUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
      summary: Register user
      tags:
      - user
swagger: "2.0"
